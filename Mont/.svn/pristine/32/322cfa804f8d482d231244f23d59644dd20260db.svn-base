import java.math.BigInteger;


public class BIUtil {
	public static BigInteger setD(BigInteger x , int index, int k , BigInteger val){		
		for (int i = 0; i < k; i++)
			x = val.testBit(i)? x.setBit(index * k + i): x.clearBit(index * k + i);			
		return x;
	}
	
	public static BigInteger setDMasShift(BigInteger x , int index, int k , BigInteger val, int shift){		
		for (int i = 0; i < k; i++)
			x = val.testBit(i)? x.setBit( shift + (index * k + i)): x.clearBit( shift + (index * k + i));			
		return x;
	}


	public static BigInteger getD(BigInteger X, int i, int k) {
		return setD(new BigInteger("0"), 0, k , X.shiftRight(i * k));
	}
}
